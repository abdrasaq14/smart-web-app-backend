on:
  push:
    branches: [develop]
  pull_request:
    branches: [ develop ]

name: Build and Push Image Dev

jobs:
  deploy:
   name: Deploy
   runs-on: ubuntu-latest

   steps:
    - name: Checkout
      uses: actions/checkout@v3
  
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag and push image to ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_RUN_ID-$GITHUB_RUN_ATTEMPT .
        echo "Pushing image to ECR with latest tag..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"
        echo "Pushing image to ECR with GITHUB RUN ID $GITHUB_RUN_ID-$GITHUB_RUN_ATTEMPT tag"
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_RUN_ID-$GITHUB_RUN_ATTEMPT

    - name: Update ECS service
      id: update-ecs-service
      run: aws ecs update-service --cluster main_dev --service api_service --force-new-deployment